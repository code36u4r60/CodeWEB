# Directory Structure

    - When a new Rails application is created, Rails writes several directories (end files) into the applications root.
    - The top level directories are:
        » app
        » components
        » config
        » db
        » doc
        » lib
        » log
        » public
        » test
        » tmp
        » vendor
    
    - app: contains several subdirevtories, the most important are:
        » controllers - where the app's controllers are
        » models - where the app's models are
        » views - "web pages" that will present data to the user
        » views/layouts - contains layout templates to be used in producing the views
        » helpers - classes yo assist the model, view, and controller classes.

    - components: holds small, self-contained applications that tie the MVC structure together.

    - config: contains code to configure the apllication's database, environment, and routing of requests.

    - db: holds scripts to manage relational databases for use with the model.

    - doc: holds documentation generated by RubyDoc comments.

    - lib: is where your libraries should be placed, unless they are third party libraries.

    - log: is where error logs go. These can be managed by script that Rails creates.

    - public: holds static web files 

    - script: contains scripts that are used to launch tools used during Rails development

    - test: contains development tests as well as Rails generated tests.

    - tmp: is used by Rails to hold temporary files.

    - vendor: is where third party libraries should be placed.

    - At the application root, there are some important file:
        » README.rdoc - document the steps needed to get the application up and running here
        
        » Rakefile - helps with building, packaging, and testing. Uses Ruby syntax to automate build processes, similar to a standard Unix Makefile
        
        » GemFile - contains dependencies your application will need to run.
        